// Basic example
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y3+x2)*(y2-x3)+y6;
integralBasis(f,2);

// Example with many branches
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
list l1 = integralBasis(f,2);
list l2 = integralBasis(f,2,"noOpti");
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

// Merging is a little slow  -  1 vs 7
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

// Merging is a little slow  -  2 vs 7
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y9+7xy2-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "opti0");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

// Merging is pretty slow - 1 vs 198
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

// Merging is very slow
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));


// Merging is very slow
//printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "opti0");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

///////////////////////////////////



// Merging is very slow
printlevel = 10;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

// Other examples
poly f = (y4+ x4)*(y^7 + 2xy + x7)*(y2-x3)*(y3+x2)*(y3-x2)+y30;
poly f = (y4+ x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;

LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y5+y4x2+7x3)*(y5+7x3)*(y3-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"opti", timer - t;
int t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"no opti", timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));
